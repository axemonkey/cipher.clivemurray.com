{
  "version": 3,
  "sources": ["../../assets/js/main.js"],
  "sourcesContent": ["const isLetter = (character) => {\n\treturn character.toUpperCase() !== character.toLowerCase();\n};\n\nconst getKeyModifier = (letter) => {\n\tconst letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n\tlet modifier = 1 - letterCode;\n\tif (modifier < 0) {\n\t\tmodifier += 26;\n\t}\n\n\treturn modifier;\n};\n\nconst stripSpaces = (string) => {\n\tconst newString = [];\n\tfor (const character of string) {\n\t\tif (character !== \" \") {\n\t\t\tnewString.push(character);\n\t\t}\n\t}\n\treturn newString.join(\"\");\n};\n\nconst getValidLetterCode = (currentCharacterCode, newCharacterCode) => {\n\t// UPPERCASE = 65\u201390\n\t// lowercase = 97\u2013122\n\n\tif (currentCharacterCode <= 90 && newCharacterCode > 90) {\n\t\treturn newCharacterCode - 26;\n\t}\n\tif (\n\t\tcurrentCharacterCode <= 122 &&\n\t\tcurrentCharacterCode >= 97 &&\n\t\tnewCharacterCode > 122\n\t) {\n\t\treturn newCharacterCode - 26;\n\t}\n\treturn newCharacterCode;\n};\n\nconst decodeCharacter = (encodedCharacter, keyCharacter) => {\n\tconst keyModifier = getKeyModifier(keyCharacter);\n\tconst currentCharacterCode = encodedCharacter.charCodeAt(0);\n\tconst newCharacterCode = getValidLetterCode(\n\t\tcurrentCharacterCode,\n\t\tcurrentCharacterCode + keyModifier,\n\t);\n\tconst newCharacter = String.fromCharCode(newCharacterCode);\n\n\treturn newCharacter;\n};\n\nconst getDecodedText = (encodedText, key) => {\n\tif (key.length === 0) {\n\t\treturn encodedText;\n\t}\n\n\tlet output = [];\n\tlet keyIndex = 0;\n\n\tfor (let index = 0; index < encodedText.length; index++) {\n\t\tconst encodedCharacter = encodedText.charAt(index);\n\t\tif (isLetter(encodedCharacter)) {\n\t\t\tconst keyCharacter = key[keyIndex];\n\t\t\tconst newCharacter = decodeCharacter(encodedCharacter, keyCharacter);\n\t\t\tkeyIndex++;\n\t\t\tif (keyIndex === key.length) {\n\t\t\t\tkeyIndex = 0;\n\t\t\t}\n\t\t\toutput.push(newCharacter);\n\t\t} else if (encodedCharacter === \"\\n\") {\n\t\t\toutput.push(\"<br>\");\n\t\t} else {\n\t\t\toutput.push(encodedCharacter);\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nconst decodeText = () => {\n\tconst theForm = document.querySelector(\"form\");\n\n\tconst encodedText = theForm.querySelector(\"#encoded\").value.trim();\n\tconst key = stripSpaces(theForm.querySelector(\"#key\").value.trim());\n\n\tconst decodedText = getDecodedText(encodedText, key);\n\n\treturn decodedText;\n};\n\nconst createOutputFromForm = () => {\n\tconst dText = decodeText();\n\tconst outputDiv = document.createElement(\"div\");\n\toutputDiv.id = \"generated-output\";\n\n\tconst htmlString = `<p>${dText}</p>`;\n\n\toutputDiv.innerHTML = htmlString;\n\tdocument.querySelector(\"#output\").replaceChildren(outputDiv);\n};\n\nconst init = () => {\n\tconst theForm = document.querySelector(\"form\");\n\tconsole.log(\"load\");\n\n\tcreateOutputFromForm();\n\n\tconst eventList = [\n\t\t\"change\",\n\t\t\"keyup\",\n\t\t\"paste\",\n\t\t\"input\",\n\t\t\"propertychange\",\n\t\t\"click\",\n\t];\n\tconst formInputs = theForm.querySelectorAll('input[type=\"text\"], textarea');\n\tfor (const formInput of formInputs) {\n\t\tfor (const event of eventList) {\n\t\t\tformInput.addEventListener(event, createOutputFromForm);\n\t\t}\n\t}\n};\n\nwindow.addEventListener(\"load\", init);\n"],
  "mappings": "MAAA,IAAMA,EAAYC,GACVA,EAAU,YAAY,IAAMA,EAAU,YAAY,EAGpDC,EAAkBC,GAAW,CAElC,IAAIC,EAAW,GADID,EAAO,YAAY,EAAE,WAAW,CAAC,EAAI,IAExD,OAAIC,EAAW,IACdA,GAAY,IAGNA,CACR,EAEMC,EAAeC,GAAW,CAC/B,IAAMC,EAAY,CAAC,EACnB,QAAWN,KAAaK,EACnBL,IAAc,KACjBM,EAAU,KAAKN,CAAS,EAG1B,OAAOM,EAAU,KAAK,EAAE,CACzB,EAEMC,EAAqB,CAACC,EAAsBC,IAI7CD,GAAwB,IAAMC,EAAmB,IAIpDD,GAAwB,KACxBA,GAAwB,IACxBC,EAAmB,IAEZA,EAAmB,GAEpBA,EAGFC,EAAkB,CAACC,EAAkBC,IAAiB,CAC3D,IAAMC,EAAcZ,EAAeW,CAAY,EACzCJ,EAAuBG,EAAiB,WAAW,CAAC,EACpDF,EAAmBF,EACxBC,EACAA,EAAuBK,CACxB,EAGA,OAFqB,OAAO,aAAaJ,CAAgB,CAG1D,EAEMK,EAAiB,CAACC,EAAaC,IAAQ,CAC5C,GAAIA,EAAI,SAAW,EAClB,OAAOD,EAGR,IAAIE,EAAS,CAAC,EACVC,EAAW,EAEf,QAASC,EAAQ,EAAGA,EAAQJ,EAAY,OAAQI,IAAS,CACxD,IAAMR,EAAmBI,EAAY,OAAOI,CAAK,EACjD,GAAIpB,EAASY,CAAgB,EAAG,CAC/B,IAAMC,EAAeI,EAAIE,CAAQ,EAC3BE,EAAeV,EAAgBC,EAAkBC,CAAY,EACnEM,IACIA,IAAaF,EAAI,SACpBE,EAAW,GAEZD,EAAO,KAAKG,CAAY,CACzB,MAAWT,IAAqB,KAC/BM,EAAO,KAAK,MAAM,EAElBA,EAAO,KAAKN,CAAgB,CAE9B,CAEA,OAAOM,EAAO,KAAK,EAAE,CACtB,EAEMI,EAAa,IAAM,CACxB,IAAMC,EAAU,SAAS,cAAc,MAAM,EAEvCP,EAAcO,EAAQ,cAAc,UAAU,EAAE,MAAM,KAAK,EAC3DN,EAAMZ,EAAYkB,EAAQ,cAAc,MAAM,EAAE,MAAM,KAAK,CAAC,EAIlE,OAFoBR,EAAeC,EAAaC,CAAG,CAGpD,EAEMO,EAAuB,IAAM,CAClC,IAAMC,EAAQH,EAAW,EACnBI,EAAY,SAAS,cAAc,KAAK,EAC9CA,EAAU,GAAK,mBAEf,IAAMC,EAAa,MAAM,OAAAF,EAAK,QAE9BC,EAAU,UAAYC,EACtB,SAAS,cAAc,SAAS,EAAE,gBAAgBD,CAAS,CAC5D,EAEME,EAAO,IAAM,CAClB,IAAML,EAAU,SAAS,cAAc,MAAM,EAC7C,QAAQ,IAAI,MAAM,EAElBC,EAAqB,EAErB,IAAMK,EAAY,CACjB,SACA,QACA,QACA,QACA,iBACA,OACD,EACMC,EAAaP,EAAQ,iBAAiB,8BAA8B,EAC1E,QAAWQ,KAAaD,EACvB,QAAWE,KAASH,EACnBE,EAAU,iBAAiBC,EAAOR,CAAoB,CAGzD,EAEA,OAAO,iBAAiB,OAAQI,CAAI",
  "names": ["isLetter", "character", "getKeyModifier", "letter", "modifier", "stripSpaces", "string", "newString", "getValidLetterCode", "currentCharacterCode", "newCharacterCode", "decodeCharacter", "encodedCharacter", "keyCharacter", "keyModifier", "getDecodedText", "encodedText", "key", "output", "keyIndex", "index", "newCharacter", "decodeText", "theForm", "createOutputFromForm", "dText", "outputDiv", "htmlString", "init", "eventList", "formInputs", "formInput", "event"]
}
